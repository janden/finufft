name: Build cuFINUFFT wheels

# testing only should be commented out in the final version
on: [push, pull_request]
# this is the release version
#on:
#  push:
#    tags:
#      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022]
#        python-version: [3.8, 3.9, 3.10, 3.11, 3.12, 3.13, pypy3.8, pypy3.9, pypy3.10, pypy3.11, pypy3.12, pypy3.13]
        include:
          - os: ubuntu-22.04
            toolchain: gcc
            arch_flags: "-march=x86-64" # probably -march=x86-64_v2 is safe
          - os: windows-2022
            toolchain: msvc-2019
            arch_flags: "/arch:SSE2" # Windows11 requires avx2 so this should be fine
    steps:
      - uses: actions/checkout@v4
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.toolchain }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: false
          cppcheck: false
          clangtidy: false
      - name: use gcc-10 on linux
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 60
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 60
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 60
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 60

          sudo update-alternatives --set gcc /usr/bin/gcc-10
          sudo update-alternatives --set g++ /usr/bin/g++-10
          sudo update-alternatives --set cc /usr/bin/gcc
          sudo update-alternatives --set c++ /usr/bin/g++
          echo "gcc version: $(cc --version)"
          echo "g++ version: $(c++ --version)"
      - name: Install cuda
        uses: Jimver/cuda-toolkit@v0.2.21
        with:
          cuda: '11.4.0'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Build cufinufft wheels
        shell: bash
        run: |
          python -m pip wheel python/cufinufft/ --wheel-dir=wheelhouse \
            -C cmake.define.CMAKE_BUILD_TYPE=Release \
            -C cmake.define.FINUFFT_ARCH_FLAGS=${{ matrix.arch_flags }} \
            -C cmake.define.FINUFFT_USE_DUCC0=OFF \
            -C cmake.define.CMAKE_GENERATOR=Ninja \
            -C cmake.define.CMAKE_GENERATOR_PLATFORM= \
            -C cmake.define.FINUFFT_CUDA_ARCHITECTURES=all-major
      - name: Delete unnecessary wheels
        run: |
          rm -f wheelhouse/*numpy*.whl
          rm -f wheelhouse/*packaging*.whl
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
